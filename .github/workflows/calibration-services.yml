name: Deploy Calibration API's

on:
  workflow_dispatch:
    inputs:
      repoName:
        description: 'Repository to Deploy'     
        required: true
        type: choice
        default: 'calibration-services'
        options:
          - calibration-services
      shaId:
        description: 'Commit id to Deploy'     
        required: true
        default: 'main'
      deployEnvironment:
        description: 'Environment to Deploy'     
        required: true
        type: choice
        default: 'dev'
        options:
          - dev
          - prod

env:
  REPO_NAME: ${{ github.event.inputs.repoName }}
  AWS_REGION: ap-south-1
  SHA_ID: ${{ github.event.inputs.shaId }}
  DEPLOY_ENV: ${{ github.event.inputs.deployEnvironment }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout main branch
      if: ${{ env.SHA_ID == 'main'}}
      uses: actions/checkout@v3
      with:
        ref: refs/heads/${{ env.SHA_ID }}
        repository: SarvashreeCalibration/${{ env.REPO_NAME }}
        token: ${{ secrets.GIT_TOKEN }}
    - name: Checkout Commit id
      if: ${{ env.SHA_ID != 'main'}}
      uses: actions/checkout@v3
      with:
        ref: ${{ env.SHA_ID }}
        repository: SarvashreeCalibration/${{ env.REPO_NAME }}
        token: ${{ secrets.GIT_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: maven
    - name: Build
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOSTNAME: ${{secrets.SSH_HOST}}
        USER_NAME: ${{secrets.USER_NAME}}
      run: |
        mvn clean install
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          ls -la
        '
